<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="bindings_2pypbat_2fem_2Mesh_8h" kind="file" language="C++">
    <compoundname>Mesh.h</compoundname>
    <includes local="no">exception</includes>
    <includes local="no">fmt/core.h</includes>
    <includes refid="Aliases_8h" local="no">pbat/Aliases.h</includes>
    <includes refid="ConstexprFor_8h" local="no">pbat/common/ConstexprFor.h</includes>
    <includes refid="Hexahedron_8h" local="no">pbat/fem/Hexahedron.h</includes>
    <includes refid="Line_8h" local="no">pbat/fem/Line.h</includes>
    <includes local="no">pbat/fem/Mesh.h</includes>
    <includes refid="Quadrilateral_8h" local="no">pbat/fem/Quadrilateral.h</includes>
    <includes refid="Tetrahedron_8h" local="no">pbat/fem/Tetrahedron.h</includes>
    <includes refid="Triangle_8h" local="no">pbat/fem/Triangle.h</includes>
    <includes local="no">pybind11/pybind11.h</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="source_2pbat_2geometry_2MeshBoundary_8cpp" local="no">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/geometry/MeshBoundary.cpp</includedby>
    <includedby refid="source_2pbat_2gpu_2vbd_2tests_2Fem_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/gpu/vbd/tests/Fem.cpp</includedby>
    <includedby refid="source_2pbat_2sim_2vbd_2Mesh_8h" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/Mesh.h</includedby>
    <includedby refid="source_2pbat_2sim_2vbd_2Data_8h" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/Data.h</includedby>
    <includedby refid="source_2pbat_2sim_2vbd_2Integrator_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/Integrator.cpp</includedby>
    <includedby refid="bindings_2pypbat_2fem_2Fem_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/bindings/pypbat/fem/Fem.cpp</includedby>
    <includedby refid="bindings_2pypbat_2fem_2Mesh_8h" local="no">/workspaces/PhysicsBasedAnimationToolkit/bindings/pypbat/fem/Mesh.h</includedby>
    <includedby refid="bindings_2pypbat_2fem_2Gradient_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/bindings/pypbat/fem/Gradient.cpp</includedby>
    <includedby refid="bindings_2pypbat_2fem_2HyperElasticPotential_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/bindings/pypbat/fem/HyperElasticPotential.cpp</includedby>
    <includedby refid="bindings_2pypbat_2fem_2Jacobian_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/bindings/pypbat/fem/Jacobian.cpp</includedby>
    <includedby refid="Laplacian_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/bindings/pypbat/fem/Laplacian.cpp</includedby>
    <includedby refid="bindings_2pypbat_2fem_2MassMatrix_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/bindings/pypbat/fem/MassMatrix.cpp</includedby>
    <includedby refid="bindings_2pypbat_2fem_2Mesh_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/bindings/pypbat/fem/Mesh.cpp</includedby>
    <includedby refid="bindings_2pypbat_2fem_2ShapeFunctions_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/bindings/pypbat/fem/ShapeFunctions.cpp</includedby>
    <includedby refid="bindings_2pypbat_2sim_2vbd_2lod_2Hierarchy_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/bindings/pypbat/sim/vbd/lod/Hierarchy.cpp</includedby>
    <includedby refid="bindings_2pypbat_2sim_2vbd_2lod_2Level_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/bindings/pypbat/sim/vbd/lod/Level.cpp</includedby>
    <includedby refid="bindings_2pypbat_2sim_2vbd_2lod_2Prolongation_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/bindings/pypbat/sim/vbd/lod/Prolongation.cpp</includedby>
    <includedby refid="bindings_2pypbat_2sim_2vbd_2lod_2Quadrature_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/bindings/pypbat/sim/vbd/lod/Quadrature.cpp</includedby>
    <includedby refid="bindings_2pypbat_2sim_2vbd_2multigrid_2Hierarchy_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/bindings/pypbat/sim/vbd/multigrid/Hierarchy.cpp</includedby>
    <includedby refid="bindings_2pypbat_2sim_2vbd_2multigrid_2Level_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/bindings/pypbat/sim/vbd/multigrid/Level.cpp</includedby>
    <incdepgraph>
      <node id="11">
        <label>pbat/fem/Hexahedron.h</label>
        <link refid="Hexahedron_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>pbat/math/GaussQuadrature.h</label>
        <link refid="GaussQuadrature_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>cstdint</label>
      </node>
      <node id="4">
        <label>pbat/Aliases.h</label>
        <link refid="Aliases_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Eigen/Core</label>
      </node>
      <node id="21">
        <label>pbat/fem/Triangle.h</label>
        <link refid="Triangle_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>QuadratureRules.h</label>
        <link refid="QuadratureRules_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>pbat/fem/Quadrilateral.h</label>
        <link refid="Quadrilateral_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>exception</label>
      </node>
      <node id="16">
        <label>pbat/math/SymmetricQuadratureRules.h</label>
        <link refid="SymmetricQuadratureRules_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/workspaces/PhysicsBasedAnimationToolkit/bindings/pypbat/fem/Mesh.h</label>
        <link refid="bindings_2pypbat_2fem_2Mesh_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>fmt/core.h</label>
      </node>
      <node id="6">
        <label>Eigen/Sparse</label>
      </node>
      <node id="20">
        <label>pbat/fem/Tetrahedron.h</label>
        <link refid="Tetrahedron_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>pbat/fem/Mesh.h</label>
      </node>
      <node id="10">
        <label>utility</label>
      </node>
      <node id="14">
        <label>array</label>
      </node>
      <node id="22">
        <label>pybind11/pybind11.h</label>
      </node>
      <node id="7">
        <label>cstddef</label>
      </node>
      <node id="8">
        <label>pbat/common/ConstexprFor.h</label>
        <link refid="ConstexprFor_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>type_traits</label>
      </node>
      <node id="17">
        <label>pbat/fem/Line.h</label>
        <link refid="Line_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="13">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/lod/Prolongation.h</label>
        <link refid="source_2pbat_2sim_2vbd_2lod_2Prolongation_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/lod/DirichletEnergy.h</label>
        <link refid="source_2pbat_2sim_2vbd_2lod_2DirichletEnergy_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/Mesh.h</label>
        <link refid="source_2pbat_2sim_2vbd_2Mesh_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/workspaces/PhysicsBasedAnimationToolkit/bindings/pypbat/fem/Mesh.h</label>
        <link refid="bindings_2pypbat_2fem_2Mesh_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/lod/Hierarchy.h</label>
        <link refid="source_2pbat_2sim_2vbd_2lod_2Hierarchy_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/multigrid/Level.h</label>
        <link refid="source_2pbat_2sim_2vbd_2multigrid_2Level_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/lod/ElasticEnergy.h</label>
        <link refid="source_2pbat_2sim_2vbd_2lod_2ElasticEnergy_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/lod/Lod.h</label>
        <link refid="source_2pbat_2sim_2vbd_2lod_2Lod_8h_source"/>
      </node>
      <node id="18">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/multigrid/Kernels.h</label>
        <link refid="vbd_2multigrid_2Kernels_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/lod/Level.h</label>
        <link refid="source_2pbat_2sim_2vbd_2lod_2Level_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/lod/Restriction.h</label>
        <link refid="source_2pbat_2sim_2vbd_2lod_2Restriction_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/lod/Quadrature.h</label>
        <link refid="source_2pbat_2sim_2vbd_2lod_2Quadrature_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/multigrid/Multigrid.h</label>
        <link refid="source_2pbat_2sim_2vbd_2multigrid_2Multigrid_8h_source"/>
      </node>
      <node id="3">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/Data.h</label>
        <link refid="source_2pbat_2sim_2vbd_2Data_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/lod/MomentumEnergy.h</label>
        <link refid="source_2pbat_2sim_2vbd_2lod_2MomentumEnergy_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/multigrid/Hierarchy.h</label>
        <link refid="source_2pbat_2sim_2vbd_2multigrid_2Hierarchy_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/Integrator.h</label>
        <link refid="source_2pbat_2sim_2vbd_2Integrator_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/Vbd.h</label>
        <link refid="source_2pbat_2sim_2vbd_2Vbd_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classpbat_1_1py_1_1fem_1_1Mesh" prot="public">pbat::py::fem::Mesh</innerclass>
    <innernamespace refid="namespacepbat">pbat</innernamespace>
    <innernamespace refid="namespacepbat_1_1py">pbat::py</innernamespace>
    <innernamespace refid="namespacepbat_1_1py_1_1fem">pbat::py::fem</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PYPBAT_FEM_MESH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PYPBAT_FEM_MESH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fmt/core.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pbat/Aliases.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pbat/common/ConstexprFor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pbat/fem/Hexahedron.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pbat/fem/Line.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pbat/fem/Mesh.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pbat/fem/Quadrilateral.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pbat/fem/Tetrahedron.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pbat/fem/Triangle.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/pybind11.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pbat<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">py<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fem<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>EElement<sp/>{<sp/><ref refid="structpbat_1_1fem_1_1Line" kindref="compound">Line</ref>,<sp/><ref refid="structpbat_1_1fem_1_1Triangle" kindref="compound">Triangle</ref>,<sp/><ref refid="structpbat_1_1fem_1_1Quadrilateral" kindref="compound">Quadrilateral</ref>,<sp/><ref refid="structpbat_1_1fem_1_1Tetrahedron" kindref="compound">Tetrahedron</ref>,<sp/><ref refid="structpbat_1_1fem_1_1Hexahedron" kindref="compound">Hexahedron</ref><sp/>};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Func&gt;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApplyToMesh(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>meshDims,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>meshOrder,<sp/>EElement<sp/>meshElement,<sp/>Func&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">pbat::fem;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">pbat::common;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>ForValues&lt;1,<sp/>2,<sp/>3&gt;([&amp;]&lt;</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Order&gt;()<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ForTypes&lt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1fem_1_1Line" kindref="compound">Line&lt;Order&gt;</ref>,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1fem_1_1Triangle" kindref="compound">Triangle&lt;Order&gt;</ref>,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1fem_1_1Quadrilateral" kindref="compound">Quadrilateral&lt;Order&gt;</ref>,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1fem_1_1Tetrahedron" kindref="compound">Tetrahedron&lt;Order&gt;</ref>,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1fem_1_1Hexahedron" kindref="compound">Hexahedron&lt;Order&gt;</ref>&gt;([&amp;]&lt;CElement<sp/>ElementType&gt;()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EElement<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eElementCandidate<sp/>=<sp/>[]()<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;ElementType,<sp/><ref refid="structpbat_1_1fem_1_1Line" kindref="compound">Line&lt;Order&gt;</ref>&gt;)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>EElement::<ref refid="structpbat_1_1fem_1_1Line" kindref="compound">Line</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>constexpr<sp/>(std::is_same_v&lt;ElementType,<sp/><ref refid="structpbat_1_1fem_1_1Triangle" kindref="compound">Triangle</ref>&lt;Order&gt;&gt;)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>EElement::<ref refid="structpbat_1_1fem_1_1Triangle" kindref="compound">Triangle</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>constexpr<sp/>(std::is_same_v&lt;ElementType,<sp/><ref refid="structpbat_1_1fem_1_1Quadrilateral" kindref="compound">Quadrilateral</ref>&lt;Order&gt;&gt;)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>EElement::<ref refid="structpbat_1_1fem_1_1Quadrilateral" kindref="compound">Quadrilateral</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>constexpr<sp/>(std::is_same_v&lt;ElementType,<sp/><ref refid="structpbat_1_1fem_1_1Tetrahedron" kindref="compound">Tetrahedron</ref>&lt;Order&gt;&gt;)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>EElement::<ref refid="structpbat_1_1fem_1_1Tetrahedron" kindref="compound">Tetrahedron</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>constexpr<sp/>(std::is_same_v&lt;ElementType,<sp/><ref refid="structpbat_1_1fem_1_1Hexahedron" kindref="compound">Hexahedron</ref>&lt;Order&gt;&gt;)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>EElement::<ref refid="structpbat_1_1fem_1_1Hexahedron" kindref="compound">Hexahedron</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>constexpr<sp/>DimsIn<sp/>=<sp/>ElementType::kDims;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ForRange&lt;DimsIn,<sp/>3<sp/>+<sp/>1&gt;([&amp;]&lt;auto<sp/>Dims&gt;()<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((meshOrder<sp/>==<sp/>Order)<sp/>and<sp/>(meshDims<sp/>==<sp/>Dims)<sp/>and</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(meshElement<sp/>==<sp/>eElementCandidate))</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>MeshType<sp/>=<sp/><ref refid="structpbat_1_1fem_1_1Mesh" kindref="compound">pbat::fem::Mesh&lt;ElementType, Dims&gt;</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.template<sp/>operator()&lt;MeshType&gt;();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;auto<sp/>MaxQuadratureOrder,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Func&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">ApplyToMeshWithQuadrature(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>meshDims,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>meshOrder,<sp/>EElement<sp/>meshElement,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>qOrder,<sp/>Func&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qOrder<sp/>&gt;<sp/>MaxQuadratureOrder<sp/>or<sp/>qOrder<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>what<sp/>=<sp/>fmt::format(</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>quadrature<sp/>order={},<sp/>supported<sp/>orders<sp/>are<sp/>[1,{}]&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qOrder,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaxQuadratureOrder);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(what);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>ApplyToMesh(meshDims,<sp/>meshOrder,<sp/>meshElement,<sp/>[&amp;]&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MeshType&gt;()<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pbat::common::ForRange&lt;1,<sp/>MaxQuadratureOrder<sp/>+<sp/>1&gt;([&amp;]&lt;</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>QuadratureOrder&gt;()<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qOrder<sp/>==<sp/>QuadratureOrder)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.template<sp/>operator()&lt;MeshType,<sp/>QuadratureOrder&gt;();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classpbat_1_1py_1_1fem_1_1Mesh" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpbat_1_1py_1_1fem_1_1Mesh" kindref="compound">Mesh</ref></highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpbat_1_1py_1_1fem_1_1Mesh" kindref="compound">Mesh</ref>(</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Ref&lt;MatrixX<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>V,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Ref&lt;IndexMatrixX<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>C,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EElement<sp/>element,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dims);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Func&gt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Apply(Func&amp;&amp;<sp/>f)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;auto<sp/>MaxQuadratureOrder,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Func&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApplyWithQuadrature(Func&amp;&amp;<sp/>f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>qOrder)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MeshType&gt;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>MeshType*<sp/>Raw();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MeshType&gt;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>MeshType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>Raw()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>MatrixX<sp/>QuadraturePoints(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>qOrder)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>VectorX<sp/>QuadratureWeights(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>qOrder)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>MatrixX<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>X()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>IndexMatrixX<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>E()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>MatrixX&amp;<sp/>X();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>IndexMatrixX&amp;<sp/>E();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classpbat_1_1py_1_1fem_1_1Mesh" kindref="compound">Mesh</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>EElement<sp/>eElement;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mOrder;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mDims;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>mMesh;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BindMesh(pybind11::module&amp;<sp/>m);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Func&gt;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Mesh::Apply(Func&amp;&amp;<sp/>f)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="128"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>ApplyToMesh(mDims,<sp/>mOrder,<sp/>eElement,<sp/>[&amp;]&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MeshType&gt;()<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MeshType*<sp/>mesh<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">MeshType*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mMesh);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.template<sp/>operator()&lt;MeshType&gt;(mesh);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;auto<sp/>MaxQuadratureOrder,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Func&gt;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Mesh::ApplyWithQuadrature(Func&amp;&amp;<sp/>f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>qOrder)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="137"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>ApplyToMeshWithQuadrature&lt;MaxQuadratureOrder&gt;(</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDims,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOrder,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eElement,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qOrder,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;]&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MeshType,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>QuadratureOrder&gt;()<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MeshType*<sp/>mesh<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">MeshType*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mMesh);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.template<sp/>operator()&lt;MeshType,<sp/>QuadratureOrder&gt;(mesh);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MeshType&gt;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>MeshType*<sp/>Mesh::Raw()</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>MeshType*<sp/>raw{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Apply([&amp;]&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OtherMeshType&gt;(OtherMeshType*<sp/>mesh)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;MeshType,<sp/>OtherMeshType&gt;)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw<sp/>=<sp/>mesh;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>raw;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MeshType&gt;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>MeshType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>Mesh::Raw()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="162"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>MeshType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>raw{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Apply([&amp;]&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OtherMeshType&gt;(OtherMeshType*<sp/>mesh)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;MeshType,<sp/>OtherMeshType&gt;)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw<sp/>=<sp/>mesh;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>raw;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>fem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>py</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>pbat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PYPBAT_FEM_MESH_H</highlight></codeline>
    </programlisting>
    <location file="/workspaces/PhysicsBasedAnimationToolkit/bindings/pypbat/fem/Mesh.h"/>
  </compounddef>
</doxygen>
