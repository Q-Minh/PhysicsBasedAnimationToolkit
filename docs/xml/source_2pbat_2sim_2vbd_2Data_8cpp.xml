<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="source_2pbat_2sim_2vbd_2Data_8cpp" kind="file" language="C++">
    <compoundname>Data.cpp</compoundname>
    <includes refid="source_2pbat_2sim_2vbd_2Data_8h" local="yes">Data.h</includes>
    <includes local="yes">pbat/fem/Jacobian.h</includes>
    <includes local="yes">pbat/fem/MassMatrix.h</includes>
    <includes local="yes">pbat/fem/ShapeFunctions.h</includes>
    <includes local="yes">pbat/graph/Adjacency.h</includes>
    <includes local="yes">pbat/graph/Mesh.h</includes>
    <includes refid="HyperElasticity_8h" local="yes">pbat/physics/HyperElasticity.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">exception</includes>
    <includes local="no">fmt/format.h</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_set</includes>
    <incdepgraph>
      <node id="42">
        <label>fmt/format.h</label>
      </node>
      <node id="23">
        <label>pbat/graph/Mesh.h</label>
      </node>
      <node id="27">
        <label>Assign.h</label>
        <link refid="Assign_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>pbat/math/GaussQuadrature.h</label>
        <link refid="GaussQuadrature_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cstdint</label>
      </node>
      <node id="20">
        <label>pbat/fem/MassMatrix.h</label>
      </node>
      <node id="34">
        <label>Transpose.h</label>
        <link refid="Transpose_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/Data.cpp</label>
        <link refid="source_2pbat_2sim_2vbd_2Data_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>pbat/Aliases.h</label>
        <link refid="Aliases_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Eigen/Core</label>
      </node>
      <node id="40">
        <label>string</label>
      </node>
      <node id="25">
        <label>pbat/math/linalg/mini/Matrix.h</label>
        <link refid="Matrix_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>pbat/HostDevice.h</label>
        <link refid="HostDevice_8h_source"/>
      </node>
      <node id="4">
        <label>Mesh.h</label>
        <link refid="source_2pbat_2sim_2vbd_2Mesh_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>pbat/fem/Triangle.h</label>
        <link refid="Triangle_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>QuadratureRules.h</label>
        <link refid="QuadratureRules_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>unordered_set</label>
      </node>
      <node id="19">
        <label>pbat/fem/Jacobian.h</label>
      </node>
      <node id="38">
        <label>exception</label>
      </node>
      <node id="15">
        <label>pbat/math/SymmetricQuadratureRules.h</label>
        <link refid="SymmetricQuadratureRules_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>Concepts.h</label>
        <link refid="math_2linalg_2mini_2Concepts_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>pbat/graph/Color.h</label>
      </node>
      <node id="39">
        <label>fmt/core.h</label>
      </node>
      <node id="17">
        <label>PhysicsBasedAnimationToolkitExport.h</label>
      </node>
      <node id="13">
        <label>Eigen/Sparse</label>
      </node>
      <node id="3">
        <label>Enums.h</label>
        <link refid="sim_2vbd_2Enums_8h_source"/>
      </node>
      <node id="24">
        <label>pbat/physics/HyperElasticity.h</label>
        <link refid="HyperElasticity_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>string.h</label>
      </node>
      <node id="6">
        <label>pbat/fem/Tetrahedron.h</label>
        <link refid="Tetrahedron_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>pbat/fem/Mesh.h</label>
      </node>
      <node id="31">
        <label>utility</label>
      </node>
      <node id="9">
        <label>array</label>
      </node>
      <node id="22">
        <label>pbat/graph/Adjacency.h</label>
      </node>
      <node id="14">
        <label>cstddef</label>
      </node>
      <node id="26">
        <label>Api.h</label>
        <link refid="Api_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>SubMatrix.h</label>
        <link refid="SubMatrix_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>pbat/common/ConstexprFor.h</label>
        <link refid="ConstexprFor_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>concepts</label>
      </node>
      <node id="21">
        <label>pbat/fem/ShapeFunctions.h</label>
      </node>
      <node id="30">
        <label>type_traits</label>
      </node>
      <node id="2">
        <label>Data.h</label>
        <link refid="source_2pbat_2sim_2vbd_2Data_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>algorithm</label>
      </node>
      <node id="36">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacepbat">pbat</innernamespace>
    <innernamespace refid="namespacepbat_1_1sim">pbat::sim</innernamespace>
    <innernamespace refid="namespacepbat_1_1sim_1_1vbd">pbat::sim::vbd</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;Data.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pbat/fem/Jacobian.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pbat/fem/MassMatrix.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pbat/fem/ShapeFunctions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pbat/graph/Adjacency.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pbat/graph/Mesh.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pbat/physics/HyperElasticity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fmt/format.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pbat<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">sim<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vbd<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="structpbat_1_1sim_1_1vbd_1_1Data_1a3ca7b6b60d5c7b54665c65d5bdaf830d" refkind="member"><highlight class="normal"><ref refid="structpbat_1_1sim_1_1vbd_1_1Data" kindref="compound">Data</ref>&amp;<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a3ca7b6b60d5c7b54665c65d5bdaf830d" kindref="member">Data::WithVolumeMesh</ref>(</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Ref&lt;MatrixX<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Vin,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Ref&lt;IndexMatrixX<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Ein)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0814000764d127a91a05454ee341504d" kindref="member">mesh</ref><sp/>=<sp/><ref refid="structpbat_1_1fem_1_1Mesh" kindref="compound">VolumeMesh</ref>(Vin,<sp/>Ein);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="structpbat_1_1sim_1_1vbd_1_1Data_1a36e1167c73664866c343e7fbcf59bbe0" refkind="member"><highlight class="normal"><ref refid="structpbat_1_1sim_1_1vbd_1_1Data" kindref="compound">Data</ref>&amp;<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a36e1167c73664866c343e7fbcf59bbe0" kindref="member">Data::WithSurfaceMesh</ref>(</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Ref&lt;IndexVectorX<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Vin,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Ref&lt;IndexMatrixX<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Fin)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a4d65d8d1cbf5cd5c2984b8cbeb88ebdb" kindref="member">V</ref><sp/>=<sp/>Vin;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a9558fcc083d96888e3641b892d6cab7a" kindref="member">F</ref><sp/>=<sp/>Fin;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structpbat_1_1sim_1_1vbd_1_1Data_1aa686cb073d01d25c0548e3c6a7337fb7" refkind="member"><highlight class="normal"><ref refid="structpbat_1_1sim_1_1vbd_1_1Data" kindref="compound">Data</ref>&amp;<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1aa686cb073d01d25c0548e3c6a7337fb7" kindref="member">Data::WithVelocity</ref>(Eigen::Ref&lt;MatrixX<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>vIn)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2bdfa702437868783adac5a10213d65a" kindref="member">v</ref><sp/>=<sp/>vIn;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0a09281c4136604b8f7c115468cb8cd3" refkind="member"><highlight class="normal"><ref refid="structpbat_1_1sim_1_1vbd_1_1Data" kindref="compound">Data</ref>&amp;<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0a09281c4136604b8f7c115468cb8cd3" kindref="member">Data::WithAcceleration</ref>(Eigen::Ref&lt;MatrixX<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>aextIn)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a9301b2727c19917c2e0289d01cb66fde" kindref="member">aext</ref><sp/>=<sp/>aextIn;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structpbat_1_1sim_1_1vbd_1_1Data_1ace4cdebedb3ff5e41d8b464b7bf9c96f" refkind="member"><highlight class="normal"><ref refid="structpbat_1_1sim_1_1vbd_1_1Data" kindref="compound">Data</ref>&amp;<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1ace4cdebedb3ff5e41d8b464b7bf9c96f" kindref="member">Data::WithMaterial</ref>(</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Ref&lt;VectorX<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhoeIn,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Ref&lt;VectorX<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mue,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Ref&lt;VectorX<sp/>const&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>lambdae)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a84f3bffdd7d8084167d80de3eb4c18eb" kindref="member">rhoe</ref><sp/>=<sp/>rhoeIn;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1af5043269e65921692dd1938cd75e9eb4" kindref="member">lame</ref>.resize(2,<sp/>mue.size());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1af5043269e65921692dd1938cd75e9eb4" kindref="member">lame</ref>.row(0)<sp/>=<sp/>mue;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1af5043269e65921692dd1938cd75e9eb4" kindref="member">lame</ref>.row(1)<sp/>=<sp/>lambdae;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="structpbat_1_1sim_1_1vbd_1_1Data_1ac1c78ed56845db9aba754a13c415b282" refkind="member"><highlight class="normal"><ref refid="structpbat_1_1sim_1_1vbd_1_1Data" kindref="compound">Data</ref>&amp;<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1ac1c78ed56845db9aba754a13c415b282" kindref="member">Data::WithDirichletConstrainedVertices</ref>(</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>IndexVectorX<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dbcIn,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>Scalar<sp/>muDin,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bDbcSorted)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0af80e757ad6d712fd8cb988c2723abe" kindref="member">dbc</ref><sp/>=<sp/>dbcIn;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a1a29fe9009b7f1592fea20cf22c8edff" kindref="member">muD</ref><sp/>=<sp/>muDin;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>bDbcSorted)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(this-&gt;<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0af80e757ad6d712fd8cb988c2723abe" kindref="member">dbc</ref>.begin(),<sp/>this-&gt;dbc.end());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="structpbat_1_1sim_1_1vbd_1_1Data_1a6270314a24ddb420152329c255967da7" refkind="member"><highlight class="normal"><ref refid="structpbat_1_1sim_1_1vbd_1_1Data" kindref="compound">Data</ref>&amp;<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a6270314a24ddb420152329c255967da7" kindref="member">Data::WithVertexColoringStrategy</ref>(</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>graph::EGreedyColorOrderingStrategy<sp/>eOrderingIn,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>graph::EGreedyColorSelectionStrategy<sp/>eSelectionIn)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a65e365755f7b8b39de4fc1f46dbd883e" kindref="member">eOrdering</ref><sp/><sp/>=<sp/>eOrderingIn;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a5f6eed3ae91f2ba44f10ebf7ffd8ebb7" kindref="member">eSelection</ref><sp/>=<sp/>eSelectionIn;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="structpbat_1_1sim_1_1vbd_1_1Data_1aaa23905100edff4312401f985e8db982" refkind="member"><highlight class="normal"><ref refid="structpbat_1_1sim_1_1vbd_1_1Data" kindref="compound">Data</ref>&amp;<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1aaa23905100edff4312401f985e8db982" kindref="member">Data::WithInitializationStrategy</ref>(EInitializationStrategy<sp/>strategyIn)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a8bdc4ce20cf8d3033ef5aaa481e244e9" kindref="member">strategy</ref><sp/>=<sp/>strategyIn;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="structpbat_1_1sim_1_1vbd_1_1Data_1a5f3e6c10d92c609d723afaace155d96e" refkind="member"><highlight class="normal"><ref refid="structpbat_1_1sim_1_1vbd_1_1Data" kindref="compound">Data</ref>&amp;<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a5f3e6c10d92c609d723afaace155d96e" kindref="member">Data::WithRayleighDamping</ref>(Scalar<sp/>kDIn)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1ad38fcef7fd10830f10e4eaf1f45b6afa" kindref="member">kD</ref><sp/>=<sp/>kDIn;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="structpbat_1_1sim_1_1vbd_1_1Data_1a8a5e0361677cb903a24abde05afecacf" refkind="member"><highlight class="normal"><ref refid="structpbat_1_1sim_1_1vbd_1_1Data" kindref="compound">Data</ref>&amp;<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a8a5e0361677cb903a24abde05afecacf" kindref="member">Data::WithCollisionPenalty</ref>(Scalar<sp/>kCIn)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a11a08fafec36cb87ca5833dabad091c5" kindref="member">kC</ref><sp/>=<sp/>kCIn;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="structpbat_1_1sim_1_1vbd_1_1Data_1aff718e71aa48623533cbd65be1cd81a2" refkind="member"><highlight class="normal"><ref refid="structpbat_1_1sim_1_1vbd_1_1Data" kindref="compound">Data</ref>&amp;<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1aff718e71aa48623533cbd65be1cd81a2" kindref="member">Data::WithHessianDeterminantZeroUnder</ref>(Scalar<sp/>zero)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a3f5c9dc1a0032e5497ba4cf856fe261e" kindref="member">detHZero</ref><sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="structpbat_1_1sim_1_1vbd_1_1Data_1a7466f7eec8f704576cdc03430314d7e0" refkind="member"><highlight class="normal"><ref refid="structpbat_1_1sim_1_1vbd_1_1Data" kindref="compound">Data</ref>&amp;<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a7466f7eec8f704576cdc03430314d7e0" kindref="member">Data::Construct</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bValidate)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertex<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2a0bd0abb260a15041042f27078ab0d9" kindref="member">x</ref><sp/>=<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0814000764d127a91a05454ee341504d" kindref="member">mesh</ref>.<ref refid="structpbat_1_1fem_1_1Mesh_1abc65a193ee960705ddf64227afb18809" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1aabba5dceecdcdf185a2f0a2f5ea45a32" kindref="member">xt</ref>.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1aabba5dceecdcdf185a2f0a2f5ea45a32" kindref="member">xt</ref><sp/>=<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2a0bd0abb260a15041042f27078ab0d9" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2bdfa702437868783adac5a10213d65a" kindref="member">v</ref>.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2bdfa702437868783adac5a10213d65a" kindref="member">v</ref>.setZero(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2a0bd0abb260a15041042f27078ab0d9" kindref="member">x</ref>.rows(),<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2a0bd0abb260a15041042f27078ab0d9" kindref="member">x</ref>.cols());</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a9301b2727c19917c2e0289d01cb66fde" kindref="member">aext</ref>.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a9301b2727c19917c2e0289d01cb66fde" kindref="member">aext</ref>.resizeLike(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2a0bd0abb260a15041042f27078ab0d9" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a9301b2727c19917c2e0289d01cb66fde" kindref="member">aext</ref>.colwise()<sp/>=<sp/>Vector&lt;3&gt;{Scalar(0),<sp/>Scalar(0),<sp/>Scalar(-9.81)};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a4fec3531f1dee1ae4ef57c4faf34aeb7" kindref="member">xtilde</ref>.resizeLike(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2a0bd0abb260a15041042f27078ab0d9" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a28575e41edf73b289223333032fcb2f1" kindref="member">xchebm2</ref>.resizeLike(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2a0bd0abb260a15041042f27078ab0d9" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1ac6310357896469a40c518173d896110f" kindref="member">xchebm1</ref>.resizeLike(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2a0bd0abb260a15041042f27078ab0d9" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a8b1add2e7da96f7fb534cec017867f96" kindref="member">vt</ref>.resizeLike(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2a0bd0abb260a15041042f27078ab0d9" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Material<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1af5043269e65921692dd1938cd75e9eb4" kindref="member">lame</ref>.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>[mu,<sp/>lambda]<sp/>=<sp/>physics::LameCoefficients(Scalar(1e6),<sp/>Scalar(0.45));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1af5043269e65921692dd1938cd75e9eb4" kindref="member">lame</ref>.resize(2,<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0814000764d127a91a05454ee341504d" kindref="member">mesh</ref>.<ref refid="structpbat_1_1fem_1_1Mesh_1a384afdf16df5efa27e09f17520402b5b" kindref="member">E</ref>.cols());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1af5043269e65921692dd1938cd75e9eb4" kindref="member">lame</ref>.row(0).setConstant(mu);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1af5043269e65921692dd1938cd75e9eb4" kindref="member">lame</ref>.row(1).setConstant(lambda);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a84f3bffdd7d8084167d80de3eb4c18eb" kindref="member">rhoe</ref>.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a84f3bffdd7d8084167d80de3eb4c18eb" kindref="member">rhoe</ref>.setConstant(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0814000764d127a91a05454ee341504d" kindref="member">mesh</ref>.<ref refid="structpbat_1_1fem_1_1Mesh_1a384afdf16df5efa27e09f17520402b5b" kindref="member">E</ref>.cols(),<sp/>Scalar(1e3));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>MatrixX<sp/>detJe<sp/>=<sp/>fem::DeterminantOfJacobian&lt;2&gt;(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0814000764d127a91a05454ee341504d" kindref="member">mesh</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>MatrixX<sp/>rhog<sp/><sp/>=<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a84f3bffdd7d8084167d80de3eb4c18eb" kindref="member">rhoe</ref>.transpose().replicate(detJe.rows(),<sp/>1);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1fem_1_1MassMatrix" kindref="compound">fem::MassMatrix&lt;VolumeMesh, 2&gt;</ref><sp/>M(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0814000764d127a91a05454ee341504d" kindref="member">mesh</ref>,<sp/>detJe,<sp/>rhog,<sp/>1);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2254c059ec6624402fb8ffab3b825771" kindref="member">m</ref><sp/><sp/>=<sp/>M.<ref refid="structpbat_1_1fem_1_1MassMatrix_1a12e7a19b2bdfbb962233267935be4303" kindref="member">ToLumpedMasses</ref>();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1acb06d13aaccc6827135488ff05b9baac" kindref="member">GP</ref><sp/>=<sp/>fem::ShapeFunctionGradients&lt;1&gt;(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0814000764d127a91a05454ee341504d" kindref="member">mesh</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1af7202dd6a57b205d8b245e0fc007b160" kindref="member">wg</ref><sp/>=<sp/>fem::InnerProductWeights&lt;1&gt;(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0814000764d127a91a05454ee341504d" kindref="member">mesh</ref>).reshaped();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjacency<sp/>structures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>IndexMatrixX<sp/>ilocal<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>IndexVector&lt;4&gt;{0,<sp/>1,<sp/>2,<sp/>3}.replicate(1,<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0814000764d127a91a05454ee341504d" kindref="member">mesh</ref>.<ref refid="structpbat_1_1fem_1_1Mesh_1a384afdf16df5efa27e09f17520402b5b" kindref="member">E</ref>.cols());</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>GVT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>graph::MeshAdjacencyMatrix(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0814000764d127a91a05454ee341504d" kindref="member">mesh</ref>.<ref refid="structpbat_1_1fem_1_1Mesh_1a384afdf16df5efa27e09f17520402b5b" kindref="member">E</ref>,<sp/>ilocal,<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0814000764d127a91a05454ee341504d" kindref="member">mesh</ref>.<ref refid="structpbat_1_1fem_1_1Mesh_1abc65a193ee960705ddf64227afb18809" kindref="member">X</ref>.cols());</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>GVT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>GVT.transpose();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tie(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a269db69ae0a80dfe03648191226b4f4d" kindref="member">GVGp</ref>,<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a7c8ce3d92eebe0896641aafc9c5d69b4" kindref="member">GVGe</ref>,<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1ad8afc8833069cdff86a74639d14386f2" kindref="member">GVGilocal</ref>)<sp/>=<sp/>graph::MatrixToWeightedAdjacency(GVT);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parallel<sp/>partitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>GVV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>graph::MeshPrimalGraph(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0814000764d127a91a05454ee341504d" kindref="member">mesh</ref>.<ref refid="structpbat_1_1fem_1_1Mesh_1a384afdf16df5efa27e09f17520402b5b" kindref="member">E</ref>,<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0814000764d127a91a05454ee341504d" kindref="member">mesh</ref>.<ref refid="structpbat_1_1fem_1_1Mesh_1abc65a193ee960705ddf64227afb18809" kindref="member">X</ref>.cols());</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[GVVp,<sp/>GVVv,<sp/>GVVw]<sp/>=<sp/>graph::MatrixToWeightedAdjacency(GVV);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1acdf66d1fc5a735c14e11c503e52a150b" kindref="member">colors</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>graph::GreedyColor(GVVp,<sp/>GVVv,<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a65e365755f7b8b39de4fc1f46dbd883e" kindref="member">eOrdering</ref>,<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a5f6eed3ae91f2ba44f10ebf7ffd8ebb7" kindref="member">eSelection</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tie(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a5a9bfee4a172530493ec1c3204da5c78" kindref="member">Pptr</ref>,<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a359efe0808cd94c7b7f5244ac6471f1a" kindref="member">Padj</ref>)<sp/><sp/><sp/><sp/>=<sp/>graph::MapToAdjacency(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1acdf66d1fc5a735c14e11c503e52a150b" kindref="member">colors</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>Dirichlet<sp/>boundary<sp/>conditions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>done<sp/>by<sp/>removing<sp/>any<sp/>velocity<sp/>and<sp/>external<sp/>accelerations<sp/>(i.e.<sp/>external<sp/>forces)<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dirichet<sp/>vertices.<sp/>Additionally,<sp/>we<sp/>omit<sp/>internal<sp/>forces<sp/>of<sp/>Dirichlet<sp/>vertices<sp/>by<sp/>removing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>such<sp/>vertices<sp/>from<sp/>the<sp/>minimization,<sp/>i.e.<sp/>the<sp/>parallel<sp/>vertex<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2bdfa702437868783adac5a10213d65a" kindref="member">v</ref>(Eigen::placeholders::all,<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0af80e757ad6d712fd8cb988c2723abe" kindref="member">dbc</ref>).setZero();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a9301b2727c19917c2e0289d01cb66fde" kindref="member">aext</ref>(Eigen::placeholders::all,<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0af80e757ad6d712fd8cb988c2723abe" kindref="member">dbc</ref>).setZero();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_set&lt;Index&gt;<sp/>D{};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>D.reserve(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0af80e757ad6d712fd8cb988c2723abe" kindref="member">dbc</ref>.size()<sp/>*<sp/>3ULL);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>D.insert(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0af80e757ad6d712fd8cb988c2723abe" kindref="member">dbc</ref>.begin(),<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a0af80e757ad6d712fd8cb988c2723abe" kindref="member">dbc</ref>.end());</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>graph::RemoveEdges(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a5a9bfee4a172530493ec1c3204da5c78" kindref="member">Pptr</ref>,<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a359efe0808cd94c7b7f5244ac6471f1a" kindref="member">Padj</ref>,<sp/>[&amp;]([[maybe_unused]]<sp/>Index<sp/>p,<sp/>Index<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2bdfa702437868783adac5a10213d65a" kindref="member">v</ref>)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>D.find(<ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2bdfa702437868783adac5a10213d65a" kindref="member">v</ref>)<sp/>!=<sp/>D.end();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>user<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bValidate)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bPerVertexQuantityDimensionsValid<sp/>=<sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2a0bd0abb260a15041042f27078ab0d9" kindref="member">x</ref>.cols()<sp/>==<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1aabba5dceecdcdf185a2f0a2f5ea45a32" kindref="member">xt</ref>.cols()<sp/>and</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2a0bd0abb260a15041042f27078ab0d9" kindref="member">x</ref>.cols()<sp/>==<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2bdfa702437868783adac5a10213d65a" kindref="member">v</ref>.cols()<sp/>and</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2a0bd0abb260a15041042f27078ab0d9" kindref="member">x</ref>.cols()<sp/>==<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a9301b2727c19917c2e0289d01cb66fde" kindref="member">aext</ref>.cols()<sp/>and</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2a0bd0abb260a15041042f27078ab0d9" kindref="member">x</ref>.cols()<sp/>==<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2254c059ec6624402fb8ffab3b825771" kindref="member">m</ref>.size()<sp/>and<sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2a0bd0abb260a15041042f27078ab0d9" kindref="member">x</ref>.rows()<sp/>==<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1aabba5dceecdcdf185a2f0a2f5ea45a32" kindref="member">xt</ref>.rows()<sp/>and</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2a0bd0abb260a15041042f27078ab0d9" kindref="member">x</ref>.rows()<sp/>==<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2bdfa702437868783adac5a10213d65a" kindref="member">v</ref>.rows()<sp/>and</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2a0bd0abb260a15041042f27078ab0d9" kindref="member">x</ref>.rows()<sp/>==<sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a9301b2727c19917c2e0289d01cb66fde" kindref="member">aext</ref>.rows()<sp/>and</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2a0bd0abb260a15041042f27078ab0d9" kindref="member">x</ref>.rows()<sp/>==<sp/>3;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>bPerVertexQuantityDimensionsValid)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>what<sp/>=<sp/>fmt::format(</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;x,<sp/>v,<sp/>aext<sp/>and<sp/>m<sp/>must<sp/>have<sp/>same<sp/>#columns={}<sp/>as<sp/>x,<sp/>and<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;3<sp/>rows<sp/>(except<sp/>m)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1sim_1_1vbd_1_1Data_1a2a0bd0abb260a15041042f27078ab0d9" kindref="member">x</ref>.cols());</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(what);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vbd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>sim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>pbat</highlight></codeline>
    </programlisting>
    <location file="/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/Data.cpp"/>
  </compounddef>
</doxygen>
