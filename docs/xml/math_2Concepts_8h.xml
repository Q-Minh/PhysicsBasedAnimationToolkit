<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="math_2Concepts_8h" kind="file" language="C++">
    <compoundname>Concepts.h</compoundname>
    <includes local="no">concepts</includes>
    <includes refid="Aliases_8h" local="no">pbat/Aliases.h</includes>
    <includes refid="common_2Concepts_8h" local="no">pbat/common/Concepts.h</includes>
    <includedby refid="GaussQuadrature_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/GaussQuadrature.cpp</includedby>
    <includedby refid="source_2pbat_2math_2Math_8h" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/Math.h</includedby>
    <includedby refid="source_2pbat_2math_2MomentFitting_8h" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/MomentFitting.h</includedby>
    <includedby refid="PolynomialBasis_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/PolynomialBasis.cpp</includedby>
    <includedby refid="SymmetricQuadratureRules_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/SymmetricQuadratureRules.cpp</includedby>
    <incdepgraph>
      <node id="8">
        <label>iterator</label>
      </node>
      <node id="9">
        <label>ranges</label>
      </node>
      <node id="3">
        <label>pbat/Aliases.h</label>
        <link refid="Aliases_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Eigen/Core</label>
      </node>
      <node id="5">
        <label>Eigen/Sparse</label>
      </node>
      <node id="7">
        <label>pbat/common/Concepts.h</label>
        <link refid="common_2Concepts_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cstddef</label>
      </node>
      <node id="2">
        <label>concepts</label>
      </node>
      <node id="10">
        <label>type_traits</label>
      </node>
      <node id="1">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/Concepts.h</label>
        <link refid="math_2Concepts_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/Pbat.h</label>
        <link refid="Pbat_8h_source"/>
      </node>
      <node id="2">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/Math.h</label>
        <link refid="source_2pbat_2math_2Math_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/MomentFitting.h</label>
        <link refid="source_2pbat_2math_2MomentFitting_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/Concepts.h</label>
        <link refid="math_2Concepts_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacepbat">pbat</innernamespace>
    <innernamespace refid="namespacepbat_1_1math">pbat::math</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PBAT_MATH_CONCEPTS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PBAT_MATH_CONCEPTS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;concepts&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pbat/Aliases.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pbat/common/Concepts.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pbat<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">math<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">concept<sp/>CPolynomialBasis<sp/>=<sp/>requires(T<sp/>t)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::is_integral_v&lt;decltype(T::kDims)&gt;;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::is_integral_v&lt;decltype(T::kOrder)&gt;;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::is_integral_v&lt;decltype(T::kSize)&gt;;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.eval(Vector&lt;T::kDims&gt;{})</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>-&gt;<sp/>std::convertible_to&lt;Vector&lt;T::kSize&gt;&gt;;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.derivatives(Vector&lt;T::kDims&gt;{})</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>-&gt;<sp/>std::convertible_to&lt;Matrix&lt;T::kDims,<sp/>T::kSize&gt;&gt;;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.antiderivatives(Vector&lt;T::kDims&gt;{})</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>-&gt;<sp/>std::convertible_to&lt;Matrix&lt;T::kSize,<sp/>T::kDims&gt;&gt;;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">concept<sp/>CVectorPolynomialBasis<sp/>=<sp/>requires(T<sp/>t)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::is_integral_v&lt;decltype(T::kDims)&gt;;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::is_integral_v&lt;decltype(T::kOrder)&gt;;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::is_integral_v&lt;decltype(T::kSize)&gt;;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.eval(Vector&lt;T::kDims&gt;{})</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>-&gt;<sp/>std::convertible_to&lt;Matrix&lt;T::kSize,<sp/>T::kDims&gt;&gt;;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Q&gt;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">concept<sp/>CQuadratureRule<sp/>=<sp/>requires(Q<sp/>q)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::integral&lt;decltype(Q::kDims)&gt;;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>common::CContiguousArithmeticRange&lt;decltype(q.points)&gt;;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>common::CContiguousArithmeticRange&lt;decltype(q.weights)&gt;;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.points.size()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>-&gt;<sp/>std::convertible_to&lt;int&gt;;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.weights.size()</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>-&gt;<sp/>std::convertible_to&lt;int&gt;;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Q&gt;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">concept<sp/>CFixedPointQuadratureRule<sp/>=<sp/>requires(Q<sp/>q)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>CQuadratureRule&lt;Q&gt;;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::is_integral_v&lt;decltype(Q::kPoints)&gt;;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{q.points.size()<sp/>/<sp/>q.weights.size()<sp/>==<sp/>Q::kDims};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{q.weights.size()<sp/>==<sp/>Q::kPoints};</highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Q&gt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">concept<sp/>CPolynomialQuadratureRule<sp/>=<sp/>requires(Q<sp/>q)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>CQuadratureRule&lt;Q&gt;;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::is_integral_v&lt;decltype(Q::kOrder)&gt;;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Q&gt;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">concept<sp/>CFixedPointPolynomialQuadratureRule<sp/>=</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>CFixedPointQuadratureRule&lt;Q&gt;<sp/>and<sp/>CPolynomialQuadratureRule&lt;Q&gt;;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>math</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>pbat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PBAT_MATH_CONCEPTS_H</highlight></codeline>
    </programlisting>
    <location file="/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/Concepts.h"/>
  </compounddef>
</doxygen>
