<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="common_2Eigen_8h" kind="file" language="C++">
    <compoundname>Eigen.h</compoundname>
    <includes refid="common_2Concepts_8h" local="yes">Concepts.h</includes>
    <includes refid="Aliases_8h" local="no">pbat/Aliases.h</includes>
    <includes local="no">ranges</includes>
    <includedby refid="Common_8h" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/common/Common.h</includedby>
    <includedby refid="common_2Eigen_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/common/Eigen.cpp</includedby>
    <includedby refid="source_2pbat_2fem_2Jacobian_8h" local="no">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/fem/Jacobian.h</includedby>
    <includedby refid="source_2pbat_2fem_2Mesh_8h" local="no">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/fem/Mesh.h</includedby>
    <includedby refid="DivergenceVector_8h" local="no">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/fem/DivergenceVector.h</includedby>
    <includedby refid="source_2pbat_2fem_2Gradient_8h" local="no">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/fem/Gradient.h</includedby>
    <includedby refid="source_2pbat_2fem_2HyperElasticPotential_8h" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/fem/HyperElasticPotential.h</includedby>
    <includedby refid="LaplacianMatrix_8h" local="no">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/fem/LaplacianMatrix.h</includedby>
    <includedby refid="LoadVector_8h" local="no">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/fem/LoadVector.h</includedby>
    <includedby refid="source_2pbat_2fem_2MassMatrix_8h" local="no">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/fem/MassMatrix.h</includedby>
    <includedby refid="BoundingVolumeHierarchy_8h" local="no">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/geometry/BoundingVolumeHierarchy.h</includedby>
    <includedby refid="source_2pbat_2geometry_2TetrahedralAabbHierarchy_8h" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/geometry/TetrahedralAabbHierarchy.h</includedby>
    <includedby refid="source_2pbat_2geometry_2TriangleAabbHierarchy_8h" local="no">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/geometry/TriangleAabbHierarchy.h</includedby>
    <includedby refid="source_2pbat_2graph_2Adjacency_8h" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/graph/Adjacency.h</includedby>
    <includedby refid="source_2pbat_2graph_2Color_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/graph/Color.cpp</includedby>
    <includedby refid="source_2pbat_2graph_2Partition_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/graph/Partition.cpp</includedby>
    <includedby refid="source_2pbat_2math_2MomentFitting_8h" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/MomentFitting.h</includedby>
    <includedby refid="source_2pbat_2math_2MomentFitting_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/MomentFitting.cpp</includedby>
    <includedby refid="source_2pbat_2sim_2vbd_2Integrator_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/vbd/Integrator.cpp</includedby>
    <includedby refid="source_2pbat_2sim_2xpbd_2Integrator_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/sim/xpbd/Integrator.cpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>iterator</label>
      </node>
      <node id="9">
        <label>ranges</label>
      </node>
      <node id="5">
        <label>pbat/Aliases.h</label>
        <link refid="Aliases_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Eigen/Core</label>
      </node>
      <node id="7">
        <label>Eigen/Sparse</label>
      </node>
      <node id="2">
        <label>Concepts.h</label>
        <link refid="common_2Concepts_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cstddef</label>
      </node>
      <node id="3">
        <label>concepts</label>
      </node>
      <node id="10">
        <label>type_traits</label>
      </node>
      <node id="1">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/common/Eigen.h</label>
        <link refid="common_2Eigen_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/fem/Jacobian.h</label>
        <link refid="source_2pbat_2fem_2Jacobian_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/geometry/BoundingVolumeHierarchy.h</label>
        <link refid="BoundingVolumeHierarchy_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/common/Common.h</label>
        <link refid="Common_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/Pbat.h</label>
        <link refid="Pbat_8h_source"/>
      </node>
      <node id="10">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/fem/MassMatrix.h</label>
        <link refid="source_2pbat_2fem_2MassMatrix_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/fem/LaplacianMatrix.h</label>
        <link refid="LaplacianMatrix_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/graph/Adjacency.h</label>
        <link refid="source_2pbat_2graph_2Adjacency_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/fem/Fem.h</label>
        <link refid="source_2pbat_2fem_2Fem_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/fem/Gradient.h</label>
        <link refid="source_2pbat_2fem_2Gradient_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/Math.h</label>
        <link refid="source_2pbat_2math_2Math_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/fem/DivergenceVector.h</label>
        <link refid="DivergenceVector_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/geometry/Geometry.h</label>
        <link refid="source_2pbat_2geometry_2Geometry_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/MomentFitting.h</label>
        <link refid="source_2pbat_2math_2MomentFitting_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/geometry/TetrahedralAabbHierarchy.h</label>
        <link refid="source_2pbat_2geometry_2TetrahedralAabbHierarchy_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/fem/Mesh.h</label>
        <link refid="source_2pbat_2fem_2Mesh_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/fem/HyperElasticPotential.h</label>
        <link refid="source_2pbat_2fem_2HyperElasticPotential_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/fem/ShapeFunctions.h</label>
        <link refid="source_2pbat_2fem_2ShapeFunctions_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/geometry/TriangleAabbHierarchy.h</label>
        <link refid="source_2pbat_2geometry_2TriangleAabbHierarchy_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/fem/LoadVector.h</label>
        <link refid="LoadVector_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/graph/Graph.h</label>
        <link refid="source_2pbat_2graph_2Graph_8h_source"/>
      </node>
      <node id="1">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/common/Eigen.h</label>
        <link refid="common_2Eigen_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structpbat_1_1common_1_1detail_1_1Slice" prot="public">pbat::common::detail::Slice</innerclass>
    <innernamespace refid="namespacepbat">pbat</innernamespace>
    <innernamespace refid="namespacepbat_1_1common">pbat::common</innernamespace>
    <innernamespace refid="namespacepbat_1_1common_1_1detail">pbat::common::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PBAT_COMMON_EIGEN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PBAT_COMMON_EIGEN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Concepts.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pbat/Aliases.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ranges&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pbat<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">common<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;CContiguousArithmeticRange<sp/>R&gt;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">Eigen::Map&lt;Eigen::Vector&lt;std::ranges::range_value_t&lt;R&gt;,<sp/>Eigen::Dynamic&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&gt;<sp/>ToEigen(R&amp;&amp;<sp/>r)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">rng<sp/>=<sp/>std::ranges;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::Map&lt;Eigen::Vector&lt;std::ranges::range_value_t&lt;R&gt;,<sp/>Eigen::Dynamic&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&gt;(</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rng::data(r),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Eigen::Index</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rng::size(r)));</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;CContiguousArithmeticMatrixRange<sp/>R&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">Eigen::Map&lt;Eigen::Matrix&lt;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::ranges::range_value_t&lt;R&gt;::Scalar,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Dynamic,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Dynamic&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">ToEigen(R&amp;&amp;<sp/>r)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">rng<sp/><sp/><sp/>=<sp/>std::ranges;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ValueType<sp/>=<sp/>rng::range_value_t&lt;R&gt;;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rows<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ValueType::RowsAtCompileTime;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cols<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ValueType::ColsAtCompileTime;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(ValueType::Flags<sp/>&amp;<sp/>Eigen::RowMajorBit)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(rows,<sp/>cols);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::Map&lt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;typename<sp/>ValueType::Scalar,<sp/>Eigen::Dynamic,<sp/>Eigen::Dynamic&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&gt;(</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Scalar<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::addressof(rng::data(r)[0][0])),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Eigen::Index</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rng::size(r)<sp/>*<sp/>cols));</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::ranges::random_access_range<sp/>R&gt;</highlight></codeline>
<codeline lineno="57" refid="structpbat_1_1common_1_1detail_1_1Slice" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpbat_1_1common_1_1detail_1_1Slice" kindref="compound">Slice</ref></highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpbat_1_1common_1_1detail_1_1Slice" kindref="compound">Slice</ref>(R&amp;&amp;<sp/>r)<sp/>:<sp/>r(std::forward&lt;R&gt;(r))<sp/>{}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>Index<sp/>size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Index</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::ranges::size(r));<sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>Index<sp/>operator[](Index<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Index</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(r[i]);<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>std::remove_cvref_t&lt;R&gt;<sp/>r;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::ranges::random_access_range<sp/>R&gt;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Slice(R&amp;&amp;<sp/>r)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structpbat_1_1common_1_1detail_1_1Slice" kindref="compound">detail::Slice&lt;R&gt;</ref>(std::forward&lt;R&gt;(r));</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>common</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>pbat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PBAT_COMMON_EIGEN_H</highlight></codeline>
    </programlisting>
    <location file="/workspaces/PhysicsBasedAnimationToolkit/source/pbat/common/Eigen.h"/>
  </compounddef>
</doxygen>
