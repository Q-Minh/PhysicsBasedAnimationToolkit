<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structEigen_1_1internal_1_1generic__product__impl_3_01Lhs_00_01Rhs_00_01SparseShape_00_01DenseShape_00_01ProductType_01_4" kind="struct" language="C++" prot="public">
    <compoundname>Eigen::internal::generic_product_impl&lt; Lhs, Rhs, SparseShape, DenseShape, ProductType &gt;</compoundname>
    <basecompoundref prot="public" virt="non-virtual">generic_product_impl_base&lt; Lhs, Rhs, generic_product_impl&lt; Lhs, Rhs &gt; &gt;</basecompoundref>
    <includes refid="LinearOperator_8h" local="no">LinearOperator.h</includes>
    <templateparamlist>
      <param>
        <type>pbat::math::CLinearOperator</type>
        <declname>Lhs</declname>
        <defname>Lhs</defname>
      </param>
      <param>
        <type>typename Rhs</type>
      </param>
      <param>
        <type>int</type>
        <declname>ProductType</declname>
        <defname>ProductType</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structEigen_1_1internal_1_1generic__product__impl_3_01Lhs_00_01Rhs_00_01SparseShape_00_01DenseShape_00_01ProductType_01_4_1a87c5fd89a6710968feaa6b6a2dc3b8e6" prot="public" static="no">
        <type>Product&lt; Lhs, Rhs &gt;::Scalar</type>
        <definition>typedef Product&lt;Lhs, Rhs&gt;::Scalar Eigen::internal::generic_product_impl&lt; Lhs, Rhs, SparseShape, DenseShape, ProductType &gt;::Scalar</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/LinearOperator.h" line="228" column="39" bodyfile="/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/LinearOperator.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structEigen_1_1internal_1_1generic__product__impl_3_01Lhs_00_01Rhs_00_01SparseShape_00_01DenseShape_00_01ProductType_01_4_1a9043d9607066ab700b3d57f3e8a1df41" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Dst</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void Eigen::internal::generic_product_impl&lt; Lhs, Rhs, SparseShape, DenseShape, ProductType &gt;::scaleAndAddTo</definition>
        <argsstring>(Dst &amp;dst, Lhs const &amp;lhs, Rhs const &amp;rhs, Scalar const &amp;alpha)</argsstring>
        <name>scaleAndAddTo</name>
        <param>
          <type>Dst &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>Lhs const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>Rhs const &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>Scalar const &amp;</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/LinearOperator.h" line="231" column="17" bodyfile="/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/LinearOperator.h" bodystart="231" bodyend="234"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>See Eigen/src/Core/util/Constants.h, we want to specialize all product types. </para>
    </briefdescription>
    <detaileddescription>
<para>enum ProductImplType { DefaultProduct = 0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };</para>
<para>This way, our matrix-free linear operators will be able to operate on all kinds of matrix/vector arguments, not just dynamic sized ones, as the GemvProduct denotes.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Rhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Lhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>generic_product_impl_base&lt; Lhs, Rhs, generic_product_impl&lt; Lhs, Rhs &gt; &gt;</label>
      </node>
      <node id="1">
        <label>Eigen::internal::generic_product_impl&lt; Lhs, Rhs, SparseShape, DenseShape, ProductType &gt;</label>
        <link refid="structEigen_1_1internal_1_1generic__product__impl_3_01Lhs_00_01Rhs_00_01SparseShape_00_01DenseShape_00_01ProductType_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>generic_product_impl_base&lt; Lhs, Rhs, generic_product_impl&lt; Lhs, Rhs &gt; &gt;</label>
      </node>
      <node id="1">
        <label>Eigen::internal::generic_product_impl&lt; Lhs, Rhs, SparseShape, DenseShape, ProductType &gt;</label>
        <link refid="structEigen_1_1internal_1_1generic__product__impl_3_01Lhs_00_01Rhs_00_01SparseShape_00_01DenseShape_00_01ProductType_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/LinearOperator.h" line="227" column="1" bodyfile="/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/LinearOperator.h" bodystart="225" bodyend="235"/>
    <listofallmembers>
      <member refid="structEigen_1_1internal_1_1generic__product__impl_3_01Lhs_00_01Rhs_00_01SparseShape_00_01DenseShape_00_01ProductType_01_4_1a87c5fd89a6710968feaa6b6a2dc3b8e6" prot="public" virt="non-virtual"><scope>Eigen::internal::generic_product_impl&lt; Lhs, Rhs, SparseShape, DenseShape, ProductType &gt;</scope><name>Scalar</name></member>
      <member refid="structEigen_1_1internal_1_1generic__product__impl_3_01Lhs_00_01Rhs_00_01SparseShape_00_01DenseShape_00_01ProductType_01_4_1a9043d9607066ab700b3d57f3e8a1df41" prot="public" virt="non-virtual"><scope>Eigen::internal::generic_product_impl&lt; Lhs, Rhs, SparseShape, DenseShape, ProductType &gt;</scope><name>scaleAndAddTo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
