<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="HyperElasticity_8cpp" kind="file" language="C++">
    <compoundname>HyperElasticity.cpp</compoundname>
    <includes refid="HyperElasticity_8h" local="yes">HyperElasticity.h</includes>
    <includes local="no">doctest/doctest.h</includes>
    <incdepgraph>
      <node id="6">
        <label>Assign.h</label>
        <link refid="Assign_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>cstdint</label>
      </node>
      <node id="13">
        <label>Transpose.h</label>
        <link refid="Transpose_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>pbat/Aliases.h</label>
        <link refid="Aliases_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Eigen/Core</label>
      </node>
      <node id="25">
        <label>string</label>
      </node>
      <node id="4">
        <label>pbat/math/linalg/mini/Matrix.h</label>
        <link refid="Matrix_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>pbat/HostDevice.h</label>
        <link refid="HostDevice_8h_source"/>
      </node>
      <node id="19">
        <label>exception</label>
      </node>
      <node id="7">
        <label>Concepts.h</label>
        <link refid="math_2linalg_2mini_2Concepts_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>fmt/core.h</label>
      </node>
      <node id="26">
        <label>doctest/doctest.h</label>
      </node>
      <node id="3">
        <label>PhysicsBasedAnimationToolkitExport.h</label>
      </node>
      <node id="23">
        <label>Eigen/Sparse</label>
      </node>
      <node id="2">
        <label>HyperElasticity.h</label>
        <link refid="HyperElasticity_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/physics/HyperElasticity.cpp</label>
        <link refid="HyperElasticity_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>string.h</label>
      </node>
      <node id="10">
        <label>utility</label>
      </node>
      <node id="15">
        <label>array</label>
      </node>
      <node id="24">
        <label>cstddef</label>
      </node>
      <node id="5">
        <label>Api.h</label>
        <link refid="Api_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>SubMatrix.h</label>
        <link refid="SubMatrix_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>pbat/common/ConstexprFor.h</label>
        <link refid="ConstexprFor_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>concepts</label>
      </node>
      <node id="9">
        <label>type_traits</label>
      </node>
      <node id="17">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacepbat">pbat</innernamespace>
    <innernamespace refid="namespacepbat_1_1physics">pbat::physics</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="HyperElasticity_8cpp_1a0a7cc2081170a5f07c232fc446c4d40f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;[physics] HyperElasticity&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot; HyperElasticity&quot;</type>
          <array>[physics]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/workspaces/PhysicsBasedAnimationToolkit/source/pbat/physics/HyperElasticity.cpp" line="18" column="1" bodyfile="/workspaces/PhysicsBasedAnimationToolkit/source/pbat/physics/HyperElasticity.cpp" bodystart="18" bodyend="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;HyperElasticity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pbat<sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">physics<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">std::pair&lt;Scalar,<sp/>Scalar&gt;<sp/>LameCoefficients(Scalar<sp/>Y,<sp/>Scalar<sp/>nu)</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>Scalar<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mu<sp/><sp/><sp/><sp/><sp/>=<sp/>Y<sp/>/<sp/>(2.<sp/>*<sp/>(1.<sp/>+<sp/>nu));</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>Scalar<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lambda<sp/>=<sp/>(Y<sp/>*<sp/>nu)<sp/>/<sp/>((1.<sp/>+<sp/>nu)<sp/>*<sp/>(1.<sp/>-<sp/>2.<sp/>*<sp/>nu));</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{mu,<sp/>lambda};</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>physics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>pbat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;doctest/doctest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;[physics]<sp/>HyperElasticity&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">pbat;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>Scalar<sp/>constexpr<sp/>Y<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1e6;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>Scalar<sp/>constexpr<sp/>nu<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.45;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>[mu,<sp/>lambda]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>physics::LameCoefficients(Y,<sp/>nu);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>constexpr<sp/>kNumberOfCoefficients<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>[mus,<sp/>lambdas]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>physics::LameCoefficients(</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorX::Constant(kNumberOfCoefficients,<sp/>Y),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorX::Constant(kNumberOfCoefficients,<sp/>nu));</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_EQ(mus.size(),<sp/>kNumberOfCoefficients);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_EQ(lambdas.size(),<sp/>kNumberOfCoefficients);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bAreCoefficientsSame<sp/>=</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mus.array()<sp/>==<sp/>mu).all()<sp/>and<sp/>(lambdas.array()<sp/>==<sp/>lambda).all();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(bAreCoefficientsSame);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/workspaces/PhysicsBasedAnimationToolkit/source/pbat/physics/HyperElasticity.cpp"/>
  </compounddef>
</doxygen>
