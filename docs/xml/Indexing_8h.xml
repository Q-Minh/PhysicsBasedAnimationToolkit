<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="Indexing_8h" kind="file" language="C++">
    <compoundname>Indexing.h</compoundname>
    <includes refid="common_2Concepts_8h" local="yes">Concepts.h</includes>
    <includes refid="Aliases_8h" local="yes">pbat/Aliases.h</includes>
    <includes local="no">concepts</includes>
    <includes local="no">numeric</includes>
    <includes local="no">random</includes>
    <includes local="no">ranges</includes>
    <includedby refid="Common_8h" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/common/Common.h</includedby>
    <includedby refid="Indexing_8cpp" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/common/Indexing.cpp</includedby>
    <includedby refid="source_2pbat_2graph_2Adjacency_8h" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/graph/Adjacency.h</includedby>
    <includedby refid="source_2pbat_2math_2MomentFitting_8h" local="yes">/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/MomentFitting.h</includedby>
    <incdepgraph>
      <node id="4">
        <label>iterator</label>
      </node>
      <node id="9">
        <label>ranges</label>
      </node>
      <node id="5">
        <label>pbat/Aliases.h</label>
        <link refid="Aliases_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>numeric</label>
      </node>
      <node id="6">
        <label>Eigen/Core</label>
      </node>
      <node id="7">
        <label>Eigen/Sparse</label>
      </node>
      <node id="12">
        <label>random</label>
      </node>
      <node id="1">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/common/Indexing.h</label>
        <link refid="Indexing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Concepts.h</label>
        <link refid="common_2Concepts_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cstddef</label>
      </node>
      <node id="3">
        <label>concepts</label>
      </node>
      <node id="10">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/common/Common.h</label>
        <link refid="Common_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/Pbat.h</label>
        <link refid="Pbat_8h_source"/>
      </node>
      <node id="4">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/graph/Adjacency.h</label>
        <link refid="source_2pbat_2graph_2Adjacency_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/common/Indexing.h</label>
        <link refid="Indexing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/Math.h</label>
        <link refid="source_2pbat_2math_2Math_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/math/MomentFitting.h</label>
        <link refid="source_2pbat_2math_2MomentFitting_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/workspaces/PhysicsBasedAnimationToolkit/source/pbat/graph/Graph.h</label>
        <link refid="source_2pbat_2graph_2Graph_8h_source"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacepbat">pbat</innernamespace>
    <innernamespace refid="namespacepbat_1_1common">pbat::common</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PBAT_COMMON_INDEXING_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PBAT_COMMON_INDEXING_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Concepts.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pbat/Aliases.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;concepts&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ranges&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pbat<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">common<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;CIndexRange<sp/>R,<sp/>std::</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">egral<sp/>TIndex<sp/>=<sp/>std::ranges::range_value_t&lt;R&gt;&gt;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">Eigen::Vector&lt;TIndex,<sp/>Eigen::Dynamic&gt;<sp/>CumSum(R&amp;&amp;<sp/>sizes)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">rng<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::ranges;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>IndexVectorType<sp/>=<sp/>Eigen::Vector&lt;TIndex,<sp/>Eigen::Dynamic&gt;;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>IndexVectorType<sp/>cs(rng::size(sizes)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bi<sp/><sp/><sp/><sp/>=<sp/>cs.data();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>*bi++<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Index{0};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>begin<sp/>=<sp/>rng::begin(sizes);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end<sp/><sp/><sp/>=<sp/>rng::end(sizes);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>std::partial_sum(begin,<sp/>end,<sp/>bi);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cs;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">egral<sp/>TIndex&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">Eigen::Vector&lt;TIndex,<sp/>Eigen::Dynamic&gt;<sp/>Counts(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>begin,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end,<sp/>TIndex<sp/>ncounts)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>IndexVectorType<sp/>=<sp/>Eigen::Vector&lt;TIndex,<sp/>Eigen::Dynamic&gt;;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>IndexVectorType<sp/>counts(ncounts);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>counts.setZero();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>begin;<sp/>it<sp/>!=<sp/>end;<sp/>++it)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++counts(*it);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>counts;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">egral<sp/>TIndex&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">Eigen::Vector&lt;TIndex,<sp/>Eigen::Dynamic&gt;<sp/>Shuffle(TIndex<sp/>begin,<sp/>TIndex<sp/>end)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iota<sp/>=<sp/>std::views::iota(begin,<sp/>end);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector&lt;TIndex,<sp/>Eigen::Dynamic&gt;<sp/>inds(end<sp/>-<sp/>begin);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(std::ranges::begin(iota),<sp/>std::ranges::end(iota),<sp/>inds.begin());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>std::random_device<sp/>rd{};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::mt19937<sp/>gen{rd()};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ranges::shuffle(inds,<sp/>gen);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inds;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>common</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>pbat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PBAT_COMMON_INDEXING_H</highlight></codeline>
    </programlisting>
    <location file="/workspaces/PhysicsBasedAnimationToolkit/source/pbat/common/Indexing.h"/>
  </compounddef>
</doxygen>
