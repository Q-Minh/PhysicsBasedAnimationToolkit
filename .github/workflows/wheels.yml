name: wheels

on:
  workflow_dispatch:
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            build_tool_args: -j4
            cibw_image: quay.io/pypa/manylinux_2_28_x86_64
            cibw_archs: x86_64
            cibw_build: cp310-manylinux_x86_64 cp311-manylinux_x86_64 cp312-manylinux_x86_64
          - os: windows-2022
            build_tool_args: /p:CL_MPCount=4
            cibw_archs: AMD64
            cibw_build: cp310-win_amd64 cp311-win_amd64 cp312-win_amd64
          - os: macos-13
            build_tool_args: -j4
            cibw_archs: x86_64 universal2
            cibw_build: cp310-macosx_x86_64 cp311-macosx_x86_64 cp312-macosx_x86_64 cp310_macosx_universal2 cp311_macosx_universal2 cp312_macosx_universal2
            macosx_deployment_target: "13.0"
          - os: macos-14
            build_tool_args: -j4
            cibw_archs: arm64 universal2
            cibw_build: cp310-macosx_arm64 cp311-macosx_arm64 cp312-macosx_arm64 cp310_macosx_universal2 cp311_macosx_universal2 cp312_macosx_universal2
            macosx_deployment_target: "14.0"
      max-parallel: 4

    steps:
      - uses: actions/checkout@v4

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: ${{ github.workspace }}/vcpkg
          vcpkgGitCommitId: 055721089e8037d4d617250814d11f881e557549

      - uses: pypa/cibuildwheel@v2.19.0
        env:
          MACOSX_DEPLOYMENT_TARGET: ${{ matrix.macosx_deployment_target }}
          CIBW_ENVIRONMENT_LINUX: VCPKG_ROOT=/host${{ github.workspace }}/vcpkg
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.cibw_image }}
          CIBW_ARCHS: ${{ matrix.cibw_archs }}
          CIBW_BUILD: ${{ matrix.cibw_build }}
          CIBW_BUILD_VERBOSITY: 1
          CIBW_CONFIG_SETTINGS: cmake.args="--preset=pip" build.tool-args=${{ matrix.build_tool_args }}

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

  upload_all:
    name: Upload release
    needs: [build_wheels]
    runs-on: ubuntu-latest
    if: (github.event_name == 'release' && github.event.action == 'published' && startsWith(github.ref, 'refs/tags/v')) # || (github.event_name == 'workflow_dispatch')
    # or, alternatively, upload to PyPI on every tag starting with 'v' (remove on: release above to use this)
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    environment: pypi
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
